// <auto-generated />
using BaiKiemTraLan2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaiKiemTraLan2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200925013548_taobangdulieu")]
    partial class taobangdulieu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BaiKiemTraLan2.Models.Entitiess.Book", b =>
                {
                    b.Property<int>("MaSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaTheLoai")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("NamXuatBan")
                        .HasColumnType("int");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MaSach");

                    b.HasIndex("MaTheLoai");

                    b.ToTable("Sachs");
                });

            modelBuilder.Entity("BaiKiemTraLan2.Models.Entitiess.Category", b =>
                {
                    b.Property<int>("MaTheLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MaTheLoai");

                    b.ToTable("TheLoais");

                    b.HasData(
                        new
                        {
                            MaTheLoai = 1,
                            TenTheLoai = "Tiểu Thuyết"
                        },
                        new
                        {
                            MaTheLoai = 2,
                            TenTheLoai = "Trinh Thám"
                        },
                        new
                        {
                            MaTheLoai = 3,
                            TenTheLoai = "Ngôn Tình"
                        },
                        new
                        {
                            MaTheLoai = 4,
                            TenTheLoai = "Hoạt Hình"
                        },
                        new
                        {
                            MaTheLoai = 5,
                            TenTheLoai = "Văn Học"
                        });
                });

            modelBuilder.Entity("BaiKiemTraLan2.Models.Entitiess.Book", b =>
                {
                    b.HasOne("BaiKiemTraLan2.Models.Entitiess.Category", "TheLoai")
                        .WithMany("Sachs")
                        .HasForeignKey("MaTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
